// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: comment/v1/comment.proto

package commentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommentListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 按照资源来排序
	Biz   string `protobuf:"bytes,1,opt,name=biz,proto3" json:"biz,omitempty"`
	Bizid int64  `protobuf:"varint,2,opt,name=bizid,proto3" json:"bizid,omitempty"`
	// 分页接口，按照最新评论排序（id 降序/ctime 降序）
	// 上一批次最小 ID
	MinId         int64 `protobuf:"varint,3,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit         int64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentListRequest) Reset() {
	*x = CommentListRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRequest) ProtoMessage() {}

func (x *CommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRequest.ProtoReflect.Descriptor instead.
func (*CommentListRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CommentListRequest) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *CommentListRequest) GetBizid() int64 {
	if x != nil {
		return x.Bizid
	}
	return 0
}

func (x *CommentListRequest) GetMinId() int64 {
	if x != nil {
		return x.MinId
	}
	return 0
}

func (x *CommentListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CommentListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CommentListResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCommentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{3}
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCommentRequest) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{5}
}

type GetMoreRepliesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rid           int64                  `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	MaxId         int64                  `protobuf:"varint,2,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMoreRepliesRequest) Reset() {
	*x = GetMoreRepliesRequest{}
	mi := &file_comment_v1_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMoreRepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoreRepliesRequest) ProtoMessage() {}

func (x *GetMoreRepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoreRepliesRequest.ProtoReflect.Descriptor instead.
func (*GetMoreRepliesRequest) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *GetMoreRepliesRequest) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *GetMoreRepliesRequest) GetMaxId() int64 {
	if x != nil {
		return x.MaxId
	}
	return 0
}

func (x *GetMoreRepliesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMoreRepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replies       []*Comment             `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMoreRepliesResponse) Reset() {
	*x = GetMoreRepliesResponse{}
	mi := &file_comment_v1_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMoreRepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoreRepliesResponse) ProtoMessage() {}

func (x *GetMoreRepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoreRepliesResponse.ProtoReflect.Descriptor instead.
func (*GetMoreRepliesResponse) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{7}
}

func (x *GetMoreRepliesResponse) GetReplies() []*Comment {
	if x != nil {
		return x.Replies
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid           int64                  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Biz           string                 `protobuf:"bytes,3,opt,name=biz,proto3" json:"biz,omitempty"`
	Bizid         int64                  `protobuf:"varint,4,opt,name=bizid,proto3" json:"bizid,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	RootComment   *Comment               `protobuf:"bytes,6,opt,name=root_comment,json=rootComment,proto3" json:"root_comment,omitempty"`
	ParentComment *Comment               `protobuf:"bytes,7,opt,name=parent_comment,json=parentComment,proto3" json:"parent_comment,omitempty"`
	// 正常来说，你在时间传递上，如果不想用 int64 之类的
	// 就可以考虑使用这个 Timestamp
	// 不建议这么用
	Ctime         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Utime         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=utime,proto3" json:"utime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_comment_v1_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{8}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Comment) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *Comment) GetBizid() int64 {
	if x != nil {
		return x.Bizid
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetRootComment() *Comment {
	if x != nil {
		return x.RootComment
	}
	return nil
}

func (x *Comment) GetParentComment() *Comment {
	if x != nil {
		return x.ParentComment
	}
	return nil
}

func (x *Comment) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *Comment) GetUtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Utime
	}
	return nil
}

var File_comment_v1_comment_proto protoreflect.FileDescriptor

const file_comment_v1_comment_proto_rawDesc = "" +
	"\n" +
	"\x18comment/v1/comment.proto\x12\n" +
	"comment.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"i\n" +
	"\x12CommentListRequest\x12\x10\n" +
	"\x03biz\x18\x01 \x01(\tR\x03biz\x12\x14\n" +
	"\x05bizid\x18\x02 \x01(\x03R\x05bizid\x12\x15\n" +
	"\x06min_id\x18\x03 \x01(\x03R\x05minId\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\"F\n" +
	"\x13CommentListResponse\x12/\n" +
	"\bcomments\x18\x01 \x03(\v2\x13.comment.v1.CommentR\bcomments\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x17\n" +
	"\x15DeleteCommentResponse\"E\n" +
	"\x14CreateCommentRequest\x12-\n" +
	"\acomment\x18\x01 \x01(\v2\x13.comment.v1.CommentR\acomment\"\x17\n" +
	"\x15CreateCommentResponse\"V\n" +
	"\x15GetMoreRepliesRequest\x12\x10\n" +
	"\x03rid\x18\x01 \x01(\x03R\x03rid\x12\x15\n" +
	"\x06max_id\x18\x02 \x01(\x03R\x05maxId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\"G\n" +
	"\x16GetMoreRepliesResponse\x12-\n" +
	"\areplies\x18\x01 \x03(\v2\x13.comment.v1.CommentR\areplies\"\xc5\x02\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\x03R\x03uid\x12\x10\n" +
	"\x03biz\x18\x03 \x01(\tR\x03biz\x12\x14\n" +
	"\x05bizid\x18\x04 \x01(\x03R\x05bizid\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x126\n" +
	"\froot_comment\x18\x06 \x01(\v2\x13.comment.v1.CommentR\vrootComment\x12:\n" +
	"\x0eparent_comment\x18\a \x01(\v2\x13.comment.v1.CommentR\rparentComment\x120\n" +
	"\x05ctime\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x05ctime\x120\n" +
	"\x05utime\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x05utime2\xe8\x02\n" +
	"\x0eCommentService\x12Q\n" +
	"\x0eGetCommentList\x12\x1e.comment.v1.CommentListRequest\x1a\x1f.comment.v1.CommentListResponse\x12T\n" +
	"\rDeleteComment\x12 .comment.v1.DeleteCommentRequest\x1a!.comment.v1.DeleteCommentResponse\x12T\n" +
	"\rCreateComment\x12 .comment.v1.CreateCommentRequest\x1a!.comment.v1.CreateCommentResponse\x12W\n" +
	"\x0eGetMoreReplies\x12!.comment.v1.GetMoreRepliesRequest\x1a\".comment.v1.GetMoreRepliesResponseB\x92\x01\n" +
	"\x0ecom.comment.v1B\fCommentProtoP\x01Z)webook/api/proto/gen/comment/v1;commentv1\xa2\x02\x03CXX\xaa\x02\n" +
	"Comment.V1\xca\x02\n" +
	"Comment\\V1\xe2\x02\x16Comment\\V1\\GPBMetadata\xea\x02\vComment::V1b\x06proto3"

var (
	file_comment_v1_comment_proto_rawDescOnce sync.Once
	file_comment_v1_comment_proto_rawDescData []byte
)

func file_comment_v1_comment_proto_rawDescGZIP() []byte {
	file_comment_v1_comment_proto_rawDescOnce.Do(func() {
		file_comment_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_v1_comment_proto_rawDesc), len(file_comment_v1_comment_proto_rawDesc)))
	})
	return file_comment_v1_comment_proto_rawDescData
}

var file_comment_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_comment_v1_comment_proto_goTypes = []any{
	(*CommentListRequest)(nil),     // 0: comment.v1.CommentListRequest
	(*CommentListResponse)(nil),    // 1: comment.v1.CommentListResponse
	(*DeleteCommentRequest)(nil),   // 2: comment.v1.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),  // 3: comment.v1.DeleteCommentResponse
	(*CreateCommentRequest)(nil),   // 4: comment.v1.CreateCommentRequest
	(*CreateCommentResponse)(nil),  // 5: comment.v1.CreateCommentResponse
	(*GetMoreRepliesRequest)(nil),  // 6: comment.v1.GetMoreRepliesRequest
	(*GetMoreRepliesResponse)(nil), // 7: comment.v1.GetMoreRepliesResponse
	(*Comment)(nil),                // 8: comment.v1.Comment
	(*timestamppb.Timestamp)(nil),  // 9: google.protobuf.Timestamp
}
var file_comment_v1_comment_proto_depIdxs = []int32{
	8,  // 0: comment.v1.CommentListResponse.comments:type_name -> comment.v1.Comment
	8,  // 1: comment.v1.CreateCommentRequest.comment:type_name -> comment.v1.Comment
	8,  // 2: comment.v1.GetMoreRepliesResponse.replies:type_name -> comment.v1.Comment
	8,  // 3: comment.v1.Comment.root_comment:type_name -> comment.v1.Comment
	8,  // 4: comment.v1.Comment.parent_comment:type_name -> comment.v1.Comment
	9,  // 5: comment.v1.Comment.ctime:type_name -> google.protobuf.Timestamp
	9,  // 6: comment.v1.Comment.utime:type_name -> google.protobuf.Timestamp
	0,  // 7: comment.v1.CommentService.GetCommentList:input_type -> comment.v1.CommentListRequest
	2,  // 8: comment.v1.CommentService.DeleteComment:input_type -> comment.v1.DeleteCommentRequest
	4,  // 9: comment.v1.CommentService.CreateComment:input_type -> comment.v1.CreateCommentRequest
	6,  // 10: comment.v1.CommentService.GetMoreReplies:input_type -> comment.v1.GetMoreRepliesRequest
	1,  // 11: comment.v1.CommentService.GetCommentList:output_type -> comment.v1.CommentListResponse
	3,  // 12: comment.v1.CommentService.DeleteComment:output_type -> comment.v1.DeleteCommentResponse
	5,  // 13: comment.v1.CommentService.CreateComment:output_type -> comment.v1.CreateCommentResponse
	7,  // 14: comment.v1.CommentService.GetMoreReplies:output_type -> comment.v1.GetMoreRepliesResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_comment_v1_comment_proto_init() }
func file_comment_v1_comment_proto_init() {
	if File_comment_v1_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_v1_comment_proto_rawDesc), len(file_comment_v1_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_v1_comment_proto_goTypes,
		DependencyIndexes: file_comment_v1_comment_proto_depIdxs,
		MessageInfos:      file_comment_v1_comment_proto_msgTypes,
	}.Build()
	File_comment_v1_comment_proto = out.File
	file_comment_v1_comment_proto_goTypes = nil
	file_comment_v1_comment_proto_depIdxs = nil
}
